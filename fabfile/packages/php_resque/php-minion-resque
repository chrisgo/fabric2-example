### BEGIN INIT INFO
# Provides:          php-minion-resque
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: php-minion-resque daemon
# Description:       Startup script to use Kohana Minion to attach workers to resque queues
### END INIT INFO

NAME=php-minion-resque
TASK="resque"
QUEUES="*"
COUNT=2
VERBOSE=1
OPTS="$TASK --queue=$QUEUES --count=$COUNT --verbose=$VERBOSE"

MINION_PATH="{{www_root}}"
MINION=minion

DESC="Minion shell script to run Task: $TASK"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
LOG_FILE=/var/log/$NAME.log

case "$1" in
    start)
        printf "%-50s" "Starting $NAME..."
        cd $MINION_PATH
        PID=`$MINION_PATH/$MINION $OPTS >> $LOG_FILE 2>&1 & echo $!`
        #echo "Saving PID" $PID " to " $PIDFILE
        if [ -z $PID ]; then
            printf "%s\n" "Fail"
        else
            echo $PID > $PIDFILE
            printf "%s\n" "Ok"
        fi
        exit 0
    ;;
    status)
        printf "%-50s" "Checking $NAME..."
        if [ -f $PIDFILE ]; then
            PID=`cat $PIDFILE`
            if [ -z "`ps axf | grep ${PID} | grep -v grep`" ]; then
                printf "%s\n" "PID file exists but Service not running (likely dead)"
            else
                echo "Running"
            fi
        else
            printf "%s\n" "Service not running"
        fi
        exit 0
    ;;
    stop)
        printf "%-50s" "Stopping $NAME"
            PID=`cat $PIDFILE`
            cd $MINION_PATH
        if [ -f $PIDFILE ]; then
            kill -HUP $PID
            printf "%s\n" "Ok"
            rm -f $PIDFILE
        else
            printf "%s\n" "pidfile not found"
        fi
        exit 0
    ;;
    restart)
        $0 stop
        $0 start
    ;;
    *)
        echo "Usage: $0 {status|start|stop|restart}"
        exit 1
    ;;
    
esac

:

